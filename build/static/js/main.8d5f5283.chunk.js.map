{"version":3,"sources":["components/Navbar.js","components/Text.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","id","href","title2","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","role","mode","onClick","togglemode","htmlFor","Text","useState","text","settext","heading","value","onChange","event","console","log","target","uptext","toUpperCase","lotext","toLowerCase","copytext","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","msg","remove","aria-hidden","App","setalert","showalert","message","setmode","body","style","backgroundColor","color","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8d5f5283.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div className=\"container-fluid\" id='navid'>\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title2}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">Link</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n        </li>    \r\n      \r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <li className={`nav-item mx-2 my-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n         <input type=\"checkbox\" onClick={props.togglemode} id=\"myCheck\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\r\n                 Enable Dark mode\r\n             </label>\r\n        </li>  \r\n        </ul>\r\n   </div>\r\n  </div>\r\n</nav>\r\n    );\r\n}\r\n","import React,{useState} from 'react';\r\n\r\nexport default function Text(props) {\r\n    const [text,settext]= useState('Enter the text');\r\n    const btn1upcase = ()=>{ \r\n        console.log('btn1upcase is clicked');\r\n        let uptext=text.toUpperCase();\r\n        settext(uptext);\r\n    }\r\n    const btn1locase = ()=>{ \r\n      console.log('btn1locase is clicked');\r\n      let lotext=text.toLowerCase();\r\n      settext(lotext);\r\n  }\r\n    const Onchangetext = (event)=>{ \r\n            console.log('Onchangetext function is enabled');\r\n            settext(event.target.value);\r\n    }\r\n    const btn1copy = ()=>{\r\n      console.log('Copy button is clicked');\r\n      let copytext=document.getElementById(\"textbox\");\r\n      copytext.select();\r\n      navigator.clipboard.writeText(copytext.value);\r\n    }\r\n    const btn1clear = () =>{\r\n      console.log('Clear button is clicked');\r\n      settext('');\r\n    }\r\n  return (  \r\n  <div id='textid'>\r\n  <h1>{props.heading}</h1>\r\n  <div className=\"Container1\">\r\n      <textarea className='textarea1' id=\"textbox\" value={text} onChange={Onchangetext} ></textarea>\r\n  </div>\r\n  <button className='btn1 mx-1' onClick={btn1upcase}>Convert to uppercase</button>\r\n  <button className='btn1 mx-1' onClick={btn1locase}>Convert to lowercase</button>\r\n  <button className='btn1 mx-1' onClick={btn1copy}>Copy text</button>\r\n  <button className='btn1 mx-1' onClick={btn1clear}>Clear text</button>\r\n  <div className=\"Container2\">\r\n    <p>The number of words are:-{text.split(\" \").length}</p>\r\n    <p>The number of characters are:-{text.length}</p>\r\n  </div>\r\n  </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n  const btnclose=()=>{\r\n    console.log('Close button was clicked');\r\n    let obj=document.getElementById('alertid');\r\n    obj.remove();\r\n  }\r\n  return (\r\n       props.alert && <div className=\"alertclass\" id='alertid'>\r\n               <strong>{props.alert.msg}</strong>:{props.alert.type}\r\n        <button className=\"alertbtn\" onClick={btnclose} aria-hidden=\"true\"> &times;</button>\r\n       </div>\r\n  )\r\n}\r\n","import React,{ useState } from 'react';\nimport Navbar from './components/Navbar';\nimport Text from './components/Text';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\nfunction App() {\n  const [alert, setalert] = useState(null);\n  const showalert = (message,type)=>{\n    setalert({msg:message,type:type});\n  }\n  const [mode, setmode] = useState('light');\n  const togglemode = () =>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor='#090b50';\n      document.body.style.color='white';\n      // document.getElementById('textid').style.backgroundColor ='black';\n      // document.getElementById('textid').style.color ='white';\n      document.getElementById('navid').style.backgroundColor ='black';\n      document.getElementById('navid').style.color ='white';\n      showalert('Dark mode is enabled','Success');\n      document.title='TextUtils-DarkMode';\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor='white';\n      document.body.style.color='black';\n      // document.getElementById('textid').style.backgroundColor ='white';\n      // document.getElementById('textid').style.color ='black';\n      document.getElementById('navid').style.backgroundColor ='white';\n      document.getElementById('navid').style.color ='black';\n      showalert('Light mode is enabled','Success');\n      document.title='TextUtils-LightMode';\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    {/* <div> */}\n    {/* <Switch>\n          <Route path=\"/\">\n          \n          </Route>\n        </Switch> */}\n    {/* </div> */}\n    <Navbar title2=\"Navbar nav\" mode={mode} togglemode={togglemode}/>\n    <Alert alert={alert} showalert={showalert} mode={mode} togglemode={togglemode}/>\n    <Text heading='Textheading' mode={mode} togglemode={togglemode}/>\n    {/* </Router> */}\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}